[{"/home/gosha/to-do-react/todo-react/src/index.js":"1","/home/gosha/to-do-react/todo-react/src/reportWebVitals.js":"2","/home/gosha/to-do-react/todo-react/src/App.js":"3","/home/gosha/to-do-react/todo-react/src/Components/Todo.js":"4"},{"size":478,"mtime":1609184651826,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1609184384713,"results":"7","hashOfConfig":"6"},{"size":177,"mtime":1609253495858,"results":"8","hashOfConfig":"6"},{"size":2245,"mtime":1609264896303,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"87lihk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/gosha/to-do-react/todo-react/src/index.js",[],["20","21"],"/home/gosha/to-do-react/todo-react/src/reportWebVitals.js",[],"/home/gosha/to-do-react/todo-react/src/App.js",[],"/home/gosha/to-do-react/todo-react/src/Components/Todo.js",["22"],"import React, { Component } from 'react';\nimport './style-Todo/style.css'\n\nexport default class Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            inputVal: {}\n        }\n    }\n\n    inputChange = (e) => {\n        this.setState(state => ({\n            inputVal: {\n                id: state.list.length,\n                text: e.target.value,\n                check: false\n            }\n        }))\n    }\n\n    formSubmit = (e) => {\n        e.preventDefault();\n        if(document.getElementById('input').value === ''){\n            alert('Write text in input!');\n            return false;\n        }\n        document.getElementById('input').value = '';\n        this.setState(state => ({\n            list: [...state.list, state.inputVal],\n            inputVal: {}\n        }))\n    }\n\n    checkItem = (e, checked) => {\n        this.setState(state => ({\n            list: state.list.filter((el) => {\n                if (el.id === e) {\n                    el.check = checked;\n                    return el;\n                }\n            }\n            )\n        }))\n    }\n\n    deleteItem = (item) => {\n        this.setState(state => ({\n            list: state.list.filter((el) => el.id !== item)\n        }))\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form onSubmit={this.formSubmit} >\n                    <input id='input' onChange={this.inputChange} />\n                    <button type=\"submit\">Add item</button>\n                </form>\n                <ul>\n                    {this.state.list.map((el) => {\n                        if (el.check) {\n                            return <li key={el.id} onClick={() => this.checkItem(el.id, false)}\n                                className=\"item-check\">{el.text}<span onClick={() => this.deleteItem(el.id)} >X</span></li>\n                        } else {\n                            return <li key={el.id} onClick={() => this.checkItem(el.id, true)}\n                                className=\"item-todo\">{el.text}<span onClick={() => this.deleteItem(el.id)} >X</span></li>\n                        }\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":38,"column":42,"nodeType":"29","messageId":"30","endLine":38,"endColumn":44},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]